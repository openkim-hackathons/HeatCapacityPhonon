# Set up logging.
log lammps_equilibration.log

# Set the OpenKIM model and units that will be used.
kim init ${modelname} metal unit_conversion_mode

# Periodic boundary conditions along all three dimensions.
boundary p p p 

# Explicitly include neighbor list command so that it can be changed conveniently.
neigh_modify delay 0 every 1 check yes one 2000

# Read initial zero-temperature crystal.
read_data zero_temperature_crystal.lmp

# Interatomic potential and neighbor settings
kim interactions ${species}

# Sample initial velocities.
velocity all create $(temperature*v__u_temperature) ${temperature_seed}

# Equilibrate in NPT ensemble.
fix NPT all npt temp $(temperature*v__u_temperature) $(temperature*v__u_temperature) $(temperature_damping*v__u_time) &
                iso $(pressure*v__u_pressure) $(pressure*v__u_pressure) $(pressure_damping*v__u_time)

# Define variables in proper units.
variable pe_metal equal pe/${_u_energy}
variable ke_metal equal ke/${_u_energy}
variable temp_metal equal temp/${_u_temperature}
variable press_metal equal press/${_u_pressure}
variable vol_metal equal vol/${_u_distance}/${_u_distance}/${_u_distance}
variable xlo_metal equal xlo/${_u_distance}
variable xhi_metal equal xhi/${_u_distance}
variable ylo_metal equal ylo/${_u_distance}
variable yhi_metal equal yhi/${_u_distance}
variable zlo_metal equal zlo/${_u_distance}
variable zhi_metal equal zhi/${_u_distance}

# Set up logging of thermodynamic information.
thermo_style custom step v_pe_metal v_ke_metal v_temp_metal v_press_metal v_vol_metal &
                         v_xlo_metal v_xhi_metal v_ylo_metal v_yhi_metal v_zlo_metal v_zhi_metal
thermo ${number_sampling_timesteps}

# Set timestep.
timestep $(timestep*v__u_time)

# Set up convergence check with kim-convergence.
python run_length_control input 4 SELF ${number_control_timesteps} variable v_vol_metal format piss file run_length_control.py

# Run until converged.
python run_length_control invoke

# TODO: Store final volume?

# TODO: Write out average positions and read it in Python so that we can check the structure. 

# Write the initial starting file for a true simulation.
reset_timestep 0
unfix NPT
write_restart equilibrated.restart
